[{:run_tests_output=>"Life.cs(8,5): error CS1525: Unexpected symbol `}', expecting `;'\nLife.cs(10,1): error CS8025: Parsing error\nCompilation failed: 2 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 5, 49], :number=>1}, {:run_tests_output=>"LifeTest.cs(11,13): error CS0029: Cannot implicitly convert type `string[]' to `int'\nCompilation failed: 1 error(s), 0 warnings\n", :time=>[2011, 10, 17, 21, 5, 59], :outcome=>:error, :number=>2}, {:run_tests_output=>".\nTests run: 1, Failures: 0, Not run: 0, Time: 0.020 seconds\r\n\r\n\r\n", :outcome=>:passed, :time=>[2011, 10, 17, 21, 6, 20], :number=>3}, {:run_tests_output=>"LifeTest.cs(34,1): error CS8025: Parsing error\nCompilation failed: 1 error(s), 0 warnings\n", :time=>[2011, 10, 17, 21, 8, 57], :outcome=>:error, :number=>4}, {:run_tests_output=>"LifeTest.cs(27,35): error CS1061: Type `string[]' does not contain a definition for `Count' and no extension method `Count' of type `string[]' could be found (are you missing a using directive or an assembly reference?)\nCompilation failed: 1 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 9, 15], :number=>5}, {:run_tests_output=>"..\nTests run: 2, Failures: 0, Not run: 0, Time: 0.023 seconds\r\n\r\n\r\n", :time=>[2011, 10, 17, 21, 9, 32], :outcome=>:passed, :number=>6}, {:run_tests_output=>"LifeTest.cs(61,15): error CS1525: Unexpected symbol `int', expecting `('\nLifeTest.cs(61,25): error CS0201: Only assignment, call, increment, decrement, and new object expressions can be used as a statement\nLifeTest.cs(61,49): error CS1525: Unexpected symbol `)', expecting `;'\nLifeTest.cs(65,14): error CS1519: Unexpected symbol `return' in class, struct, or interface member declaration\nLifeTest.cs(68,1): error CS8025: Parsing error\nCompilation failed: 5 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 13, 26], :number=>7}, {:run_tests_output=>"...\nTests run: 3, Failures: 0, Not run: 0, Time: 0.025 seconds\r\n\r\n\r\n", :time=>[2011, 10, 17, 21, 13, 46], :outcome=>:passed, :number=>8}]
